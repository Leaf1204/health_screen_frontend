[{"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/dashboard.js":"1","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/parentForm.js":"2","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/App.js":"3","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/reportWebVitals.js":"4","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/login.js":"5","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/index.js":"6","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/studentForm.js":"7","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/signup.js":"8","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/home.js":"9","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/teacherForm.js":"10","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/Header.js":"11"},{"size":9687,"mtime":1608846731227,"results":"12","hashOfConfig":"13"},{"size":1066,"mtime":1608614831490,"results":"14","hashOfConfig":"13"},{"size":1833,"mtime":1608840523263,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1608329223966,"results":"16","hashOfConfig":"13"},{"size":2342,"mtime":1608702598024,"results":"17","hashOfConfig":"13"},{"size":605,"mtime":1608496468637,"results":"18","hashOfConfig":"13"},{"size":1406,"mtime":1608846930546,"results":"19","hashOfConfig":"13"},{"size":1892,"mtime":1608701803976,"results":"20","hashOfConfig":"13"},{"size":217,"mtime":1608522552279,"results":"21","hashOfConfig":"13"},{"size":1867,"mtime":1608847985448,"results":"22","hashOfConfig":"13"},{"size":650,"mtime":1608611366389,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"xrk8qb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/dashboard.js",["49","50","51","52","53"],"import React from \"react\";\nimport { GlobalCtx } from \"../App\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport ParentForm from \"../components/forms/parentForm\";\nimport StudentForm from \"../components/forms/studentForm\";\nimport TeacherForm from \"../components/forms/teacherForm\";\nimport { MDBCard, MDBCardHeader, MDBCardBody, MDBTableBody, MDBTable, MDBTableHead } from \"mdbreact\";\n\n\nconst Dashboard = (props) => {\n  const { gState, setGState } = React.useContext(GlobalCtx);\n  const { url, token } = gState;\n  const [parents, setParents] = React.useState(null);\n  const [students, setStudents] = React.useState(null);\n  const [teachers, setTeachers] = React.useState(null);\n\n  const emptyParent = {\n    username: \"\",\n    parentName: \"\"\n  };\n\n  const emptystudents = {\n    child_name: \"\",\n    child_image: \"\",\n    parent_user_name: \"\"\n  };\n\n  const emptyTeachers = {\n    teacherName: \"\",\n    username: \"\",\n    students_ids: []\n  };\n\n  //fetching parents \n  const getParents = async() => {\n    const response = await fetch(url + \"/parent/\", {\n        method: \"get\",\n        headers: {\n            Authorization: \"bearer \" + token\n        }\n    })\n    const json = await response.json()\n    setParents(json)\n  }\n\n  //have Parent data displayed on page\n  React.useEffect (() => {\n    getParents() \n }, [])\n\n  //fetching students \n  const getStudents = async() => {\n    const response = await fetch(url + \"/student/\", {\n        method: \"get\",\n        headers: {\n            Authorization: \"bearer \" + token\n        }\n    })\n    const json = await response.json()\n    setStudents(json)\n  }\n  //have student data displayed on page\n  React.useEffect (() => {\n     getStudents() \n  }, [])\n////// feacting teachers /////\n\nconst getTeachers = async() => {\n    const response = await fetch(url + \"/teacher/\", {\n        method: \"get\",\n        headers: {\n            Authorization: \"bearer \" + token\n        }\n    })\n    const json = await response.json()\n    setTeachers(json)\n  }\n  //have teacher data displayed on page\n  React.useEffect (() => {\n     getTeachers() \n  }, [])\n\n  ////// create Parent ///////\n\n  const handleCreate = (parent) => {\n        fetch(url + \"/parent/\", { \n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `bearer ${token}`\n            },\n            body: JSON.stringify(parent)\n        })\n        .then(response => response.json())\n        .then(data => {\n            getParents()\n        })\n    \n    }\n//////////// create student //////////\n\nconst handleCreateStudent = (student) => {\n      fetch(url + \"/student/\", { \n          method: \"post\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `bearer ${token}`\n          },\n          body: JSON.stringify(student)\n      })\n      .then(response => response.json())\n      .then(data => {\n          getStudents()\n      })\n    }\n\n\n/////// create Teacher /////////\nconst handleCreateTeacher = (teacher) => {\n      fetch(url + \"/teacher/\", { \n          method: \"post\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `bearer ${token}`\n          },\n          body: JSON.stringify(teacher)\n      })\n      .then(response => response.json())\n      .then(data => {\n          getTeachers()\n      })\n    }\n\n\n  return (\n      <div>\n          <h1>Dashboard</h1>\n          \n          <main>\n              <div>\n              <Switch>\n                <Route \n                  exact \n                  path=\"/\"\n                  render={(rp)=>(\n                    <>\n                    <MDBCard>\n                    <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n                        <h2>Parents</h2>\n                        <Link to=\"/create\">\n                        <button>Add Parent</button>\n                    </Link>\n                    </MDBCardHeader>\n                    <MDBCardBody>\n                    <MDBTable>\n                        <MDBTableHead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Name</th>\n                                <th>User Name</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                parents ? parents.map((parent) => (\n                                <tr>\n                                <td>{parent._id}</td>\n                                <td >{parent.parentName}</td>\n                                <td>{parent.username}</td>\n                                <td>Edit</td>\n                                <td>Delete</td>\n                                </tr>\n                            )) : null }\n                        </MDBTableBody>\n                        </MDBTable>\n                        </MDBCardBody>\n                        </MDBCard>\n                            <MDBCard>\n                                <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n                                    <h2>students</h2>\n                                    <Link to=\"/createStudent\">\n                                    <button>Add student</button>\n                                    </Link>  \n                                </MDBCardHeader>\n                     <MDBCardBody>\n                        <MDBTable>\n                        <MDBTableHead>\n                        <tr>\n                                <th>Student Id</th>\n                                <th>Student Name</th>\n                                <th>Parent User Name</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                            </MDBTableHead>\n                            <MDBTableBody>\n                                {\n                                    students ? students.map((student) => (\n                                    <tr> \n                                    <td>{student._id}</td>\n                                    <td> {student.child_name}</td>\n                                    <td>{student.parent_user_name}</td>\n                                    <td>Edit</td>\n                                    <td>Delete</td>\n                                    </tr>\n                                 )) : null \n                                }\n                         </MDBTableBody>\n                        </MDBTable>\n                        </MDBCardBody>\n                        </MDBCard>\n                        <MDBCard>\n                                <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n                                    <h2>Teachers</h2>\n                                    <Link to=\"/createTeacher\">\n                                    <button>Add teacher</button>\n                                    </Link>  \n                                </MDBCardHeader>\n                     <MDBCardBody>\n                        <MDBTable>\n                        <MDBTableHead>\n                            <tr>\n                                <th>Teacher Name</th>\n                                <th>username</th>\n                                <th>class list: students_ids</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                teachers ? teachers.map((teacher) => (\n                                    <tr>\n                                        <td>{teacher.teacherName}</td>\n                                        <td>{teacher.username}</td>\n                                    </tr>\n                                )): null\n                            }\n\n                        </MDBTableBody>\n                        </MDBTable>\n                        </MDBCardBody>\n                        </MDBCard>\n                    </>\n                  )}/>\n                  <Route \n                  exact \n                  path=\"/create\"\n                  render={(rp)=>(\n                    <ParentForm\n                        {...rp}\n                        parent={emptyParent}\n                        handleSubmit={handleCreate}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/createStudent\"\n                  render={(rp)=>(\n                    <StudentForm\n                        {...rp}\n                        student={emptystudents}\n                        parents={parents}\n                        handleSubmit={handleCreateStudent}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/createTeacher\"\n                  render={(rp)=>(\n                    <TeacherForm\n                        {...rp}\n                        teacher={emptyTeachers}\n                        students={students}\n                        handleSubmit={handleCreateTeacher}\n                    /> \n                  )}/>\n              </Switch>\n              </div> \n          </main>\n\n      </div>\n  );\n};\n\n  export default Dashboard;","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/parentForm.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/App.js",["54","55","56"],"import React from \"react\";\nimport logo from './logo.svg';\nimport Header from \"./components/Header\";\nimport Signup from \"./pages/signup\";\nimport Login from \"./pages/login\";\nimport Home from \"./pages/home\";\nimport Dashboard from \"./pages/dashboard\";\nimport ParentForm from \"./components/forms/parentForm\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\n//global context\nexport const GlobalCtx = React.createContext(null)\n\n\n//global state property\n\n\n\nfunction App() {\n  const [gState, setGState] = React.useState({\n    url: \"http://localhost:5000\",\n    token: null,\n  });\n\n\n  ///check if logged in\n  React.useEffect(() => {\n    const token = JSON.parse(window.localStorage.getItem(\"token\"));\n    console.log(token);\n    if (token) {\n      setGState({ ...gState, token: token.token });\n    }\n  }, []);\n\n\n\n  return (\n    <GlobalCtx.Provider value={{gState, setGState}}>\n      <Router>\n      <div className=\"App\">\n      <Link to=\"/\"><h1>Health Screener</h1></Link>\n      <Header/>\n      <main>\n       \n        <Switch>\n          <Route exact path=\"/\" render={(rp => gState.token ? <Dashboard/> : <Home/>)}></Route>\n          <Route exact path=\"/create\" render={(rp => gState.token ? <Dashboard/> : <Home/>)}></Route>\n          <Route exact path=\"/createStudent\" render={(rp => gState.token ? <Dashboard/> : <Home/>)}></Route>\n          <Route exact path=\"/createTeacher\" render={(rp => gState.token ? <Dashboard/> : <Home/>)}></Route>\n          <Route path=\"/signup\" render={(rp) => <Signup {...rp}/>}/>\n          <Route path=\"/login\" render={(rp) => <Login {...rp}/>}/>\n          {/* <Route path=\"/dashboard\" render={(rp => <h1>dashboard</h1>)}></Route> */}\n        </Switch>\n      \n      </main>\n    </div>\n    </Router>\n    </GlobalCtx.Provider>\n  );\n}\n\nexport default App;\n","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/reportWebVitals.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/login.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/index.js",["57"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/studentForm.js",["58"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/signup.js",["59","60"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/home.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/teacherForm.js",["61","62","63"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/Header.js",[],{"ruleId":"64","severity":1,"message":"65","line":7,"column":22,"nodeType":"66","messageId":"67","endLine":7,"endColumn":28},{"ruleId":"64","severity":1,"message":"68","line":19,"column":19,"nodeType":"66","messageId":"67","endLine":19,"endColumn":28},{"ruleId":"69","severity":1,"message":"70","line":57,"column":5,"nodeType":"71","endLine":57,"endColumn":7,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":73,"column":6,"nodeType":"71","endLine":73,"endColumn":8,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"75","line":89,"column":6,"nodeType":"71","endLine":89,"endColumn":8,"suggestions":"76"},{"ruleId":"64","severity":1,"message":"77","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":12},{"ruleId":"64","severity":1,"message":"78","line":8,"column":8,"nodeType":"66","messageId":"67","endLine":8,"endColumn":18},{"ruleId":"69","severity":1,"message":"79","line":39,"column":6,"nodeType":"71","endLine":39,"endColumn":8,"suggestions":"80"},{"ruleId":"64","severity":1,"message":"65","line":7,"column":26,"nodeType":"66","messageId":"67","endLine":7,"endColumn":32},{"ruleId":"64","severity":1,"message":"81","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":19},{"ruleId":"64","severity":1,"message":"82","line":3,"column":50,"nodeType":"66","messageId":"67","endLine":3,"endColumn":56},{"ruleId":"64","severity":1,"message":"68","line":7,"column":20,"nodeType":"66","messageId":"67","endLine":7,"endColumn":29},{"ruleId":"64","severity":1,"message":"83","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":19},{"ruleId":"64","severity":1,"message":"84","line":21,"column":9,"nodeType":"66","messageId":"67","endLine":21,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":23,"column":29,"nodeType":"87","messageId":"88","endLine":23,"endColumn":31},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'setGState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getParents'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook React.useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["90"],"React Hook React.useEffect has a missing dependency: 'getTeachers'. Either include it or remove the dependency array.",["91"],"'logo' is defined but never used.","'ParentForm' is defined but never used.","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setGState(g => ...)' if you only need 'gState' in the 'setGState' call.",["92"],"'GlobalCtx' is defined but never used.","'MDBBtn' is defined but never used.","'MultiSelect' is defined but never used.","'transformStudents' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [getParents]",{"range":"101","text":"102"},"Update the dependencies array to be: [getStudents]",{"range":"103","text":"104"},"Update the dependencies array to be: [getTeachers]",{"range":"105","text":"106"},"Update the dependencies array to be: [gState]",{"range":"107","text":"108"},[1499,1501],"[getParents]",[1877,1879],"[getStudents]",[2261,2263],"[getTeachers]",[855,857],"[gState]"]