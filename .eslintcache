[{"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/dashboard.js":"1","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/parentForm.js":"2","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/App.js":"3","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/reportWebVitals.js":"4","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/login.js":"5","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/index.js":"6","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/studentForm.js":"7","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/signup.js":"8","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/home.js":"9","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/teacherForm.js":"10","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/Header.js":"11"},{"size":14382,"mtime":1609045169711,"results":"12","hashOfConfig":"13"},{"size":1064,"mtime":1609029514535,"results":"14","hashOfConfig":"13"},{"size":2005,"mtime":1609043754062,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1608329223966,"results":"16","hashOfConfig":"13"},{"size":2326,"mtime":1609004824697,"results":"17","hashOfConfig":"13"},{"size":605,"mtime":1608496468637,"results":"18","hashOfConfig":"13"},{"size":1403,"mtime":1609039072050,"results":"19","hashOfConfig":"13"},{"size":1892,"mtime":1608701803976,"results":"20","hashOfConfig":"13"},{"size":217,"mtime":1608522552279,"results":"21","hashOfConfig":"13"},{"size":1855,"mtime":1609042762555,"results":"22","hashOfConfig":"13"},{"size":650,"mtime":1608611366389,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xrk8qb",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/dashboard.js",["50","51","52","53","54"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/parentForm.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/App.js",["55","56"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/reportWebVitals.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/login.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/index.js",["57"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/studentForm.js",["58"],"import React from \"react\";\nimport { GlobalCtx } from \"../../App\";\n\nconst StudentForm = (props) => {\n  //state for the form\n\n  // todo : extract .parents property, then use it to build a select element (each value is an option)\n  const [formData, setFormData] = React.useState(props.student);\n  const [parents] = React.useState(props.parents);\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent Form from Refreshing\n    props.handleSubmit(formData); // Submit to Parents desired function\n    props.history.push(\"/\"); //Push back to display page\n  };\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n  \n\n  return (\n      <>\n      <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"Child Name\" name=\"child_name\" value={formData.child_name} onChange={handleChange} ></input>\n          <input type=\"img\" placeholder=\"Child Image\" name=\"child_image\" value={formData.child_image} onChange={handleChange} ></input>\n          <select name=\"parent_user_name\" onChange={handleChange} >\n            {\n              parents.map((parent)=>{\n                return <option key={parent._id} value={parent._id}>{parent.parentName}</option>\n              })\n            }\n          </select>\n          <input type=\"submit\" value={props.label} />\n      </form>\n      </>\n  );\n};\n\nexport default StudentForm;","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/signup.js",["59","60"],"import React from \"react\";\nimport {GlobalCtx} from \"../App\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nconst Signup = (props) => {\n\n    const {gState, setGState } = React.useContext(GlobalCtx);\n    const {url} = gState;\n\n    const blankForm = {\n        username: \"\",\n        password: \"\"\n    };\n\n    const [form, setForm] = React.useState(blankForm);\n\n    //handle change\n     const handleChange = (event) => {\n       setForm({...form, [event.target.name]: event.target.value})\n     }\n\n     //handle submit \n\n     const handleSubmit = (event) => {\n         event.preventDefault()\n        const {username, password} = form; \n\n        fetch(`${url}/auth/signup`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({username, password}),\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            setForm(blankForm);\n            props.history.push(\"/login\");\n        })\n\n     }\n\n    return (\n\n        <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody>\n            <form onSubmit={handleSubmit}>\n            <p className=\"h4 text-center py-4\">Sign up</p>\n                <div className=\"grey-text\">\n                <MDBInput type=\"text\"  label=\"username\" icon=\"user\" name=\"username\" value={form.username} onChange={handleChange}></MDBInput>\n                <MDBInput type=\"password\" label=\"Your password\" icon=\"lock\"name=\"password\" value={form.password} onChange={handleChange}></MDBInput>\n                <MDBInput type=\"submit\" value=\"signup\" />\n            </div>\n            </form>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    )\n}\n\nexport default Signup","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/home.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/teacherForm.js",["61"],"import React from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\n\nconst TeacherForm = (props) => {\n  //state for the form\n\n  // todo : extract .parents property, then use it to build a select element (each value is an option)\n  const [formData, setFormData] = React.useState(props.teacher);\n  const [students] = React.useState(props.students);\n  const [selected, setSelected] = React.useState([]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent Form from Refreshing\n    const selectedIds = selected.map((student)=>{\n      return student.value;\n    }).join(\",\");\n    formData.students_ids = selectedIds;\n    props.handleSubmit(formData); // Submit to Parents desired function\n    props.history.push(\"/\"); //Push back to display page\n  };\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const transformStudents = () =>{\n      const options = [];\n      students.map((student)=>{\n        options.push({\n            value: student._id,\n            label: student.child_name\n        })\n      });\n\n      return options;\n  }\n\n\n  return (\n      <>\n      <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"teacher Name\" name=\"teacherName\" value={formData.teacherName} onChange={handleChange} ></input> <br/>\n          Students:<br/>\n          <MultiSelect options={transformStudents()} value={selected} onChange={setSelected} labelledBy={\"Select\"}/>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={formData.username} onChange={handleChange} ></input>\n          <input type=\"password\" placeholder=\"password\" name=\"password\" value={formData.password} onChange={handleChange} ></input>\n          <input type=\"submit\" value={props.label} />\n      </form>\n      </>\n  );\n};\n\nexport default TeacherForm;","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/Header.js",[],{"ruleId":"62","severity":1,"message":"63","line":7,"column":22,"nodeType":"64","messageId":"65","endLine":7,"endColumn":28},{"ruleId":"62","severity":1,"message":"66","line":38,"column":19,"nodeType":"64","messageId":"65","endLine":38,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":62,"column":5,"nodeType":"69","endLine":62,"endColumn":7,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":131,"column":4,"nodeType":"69","endLine":131,"endColumn":6,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":196,"column":6,"nodeType":"69","endLine":196,"endColumn":8,"suggestions":"74"},{"ruleId":"62","severity":1,"message":"75","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"76","line":39,"column":6,"nodeType":"69","endLine":39,"endColumn":8,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"63","line":7,"column":26,"nodeType":"64","messageId":"65","endLine":7,"endColumn":32},{"ruleId":"62","severity":1,"message":"78","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"62","severity":1,"message":"79","line":3,"column":50,"nodeType":"64","messageId":"65","endLine":3,"endColumn":56},{"ruleId":"62","severity":1,"message":"66","line":7,"column":20,"nodeType":"64","messageId":"65","endLine":7,"endColumn":29},{"ruleId":"80","severity":1,"message":"81","line":28,"column":29,"nodeType":"82","messageId":"83","endLine":28,"endColumn":31},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'setGState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getParents'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook React.useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["85"],"React Hook React.useEffect has a missing dependency: 'getTeachers'. Either include it or remove the dependency array.",["86"],"'logo' is defined but never used.","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setGState(g => ...)' if you only need 'gState' in the 'setGState' call.",["87"],"'GlobalCtx' is defined but never used.","'MDBBtn' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [getParents]",{"range":"96","text":"97"},"Update the dependencies array to be: [getStudents]",{"range":"98","text":"99"},"Update the dependencies array to be: [getTeachers]",{"range":"100","text":"101"},"Update the dependencies array to be: [gState]",{"range":"102","text":"103"},[1756,1758],"[getParents]",[3226,3228],"[getStudents]",[4783,4785],"[getTeachers]",[801,803],"[gState]"]