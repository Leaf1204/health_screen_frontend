[{"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/dashboard.js":"1","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/parentForm.js":"2","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/App.js":"3","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/reportWebVitals.js":"4","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/login.js":"5","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/index.js":"6","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/studentForm.js":"7","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/signup.js":"8","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/home.js":"9","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/teacherForm.js":"10","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/Header.js":"11"},{"size":14382,"mtime":1609045169711,"results":"12","hashOfConfig":"13"},{"size":1188,"mtime":1609052014525,"results":"14","hashOfConfig":"13"},{"size":1956,"mtime":1609049841286,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1608329223966,"results":"16","hashOfConfig":"13"},{"size":2331,"mtime":1609051241992,"results":"17","hashOfConfig":"13"},{"size":605,"mtime":1608496468637,"results":"18","hashOfConfig":"13"},{"size":1403,"mtime":1609039072050,"results":"19","hashOfConfig":"13"},{"size":1793,"mtime":1609051239516,"results":"20","hashOfConfig":"13"},{"size":184,"mtime":1609050924784,"results":"21","hashOfConfig":"13"},{"size":1855,"mtime":1609042762555,"results":"22","hashOfConfig":"13"},{"size":1721,"mtime":1609051330539,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"xrk8qb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/dashboard.js",["50","51","52","53","54"],"import React from \"react\";\nimport { GlobalCtx } from \"../App\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport ParentForm from \"../components/forms/parentForm\";\nimport StudentForm from \"../components/forms/studentForm\";\nimport TeacherForm from \"../components/forms/teacherForm\";\nimport { MDBContainer, MDBCard, MDBCardHeader, MDBCardBody, MDBTableBody, MDBTable, MDBTableHead } from \"mdbreact\";\n\n\nconst Dashboard = (props) => {\n\nconst emptyParent = {\n    username: \"\",\n    parentName: \"\"\n    };\n\n    const emptyStudent = {\n    child_name: \"\",\n    child_image: \"\",\n    parent_user_name: \"\"\n    };\n\n    const emptyTeacher = {\n    teacherName: \"\",\n    username: \"\",\n    students_ids: []\n    };\n    \n\n  const { gState, setGState } = React.useContext(GlobalCtx);\n  const { url, token } = gState;\n  const [parents, setParents] = React.useState(null);\n  const [students, setStudents] = React.useState(null);\n  const [teachers, setTeachers] = React.useState(null);\n  const [selectedParent, setSelectedParent] = React.useState(emptyParent);\n  const [selectedStudent, setSelectedStudent] = React.useState(emptyStudent);\n  const [selectedTeacher, setSelectedTeacher] = React.useState(emptyTeacher);\n\n  //fetching parents \n  const getParents = async() => {\n    const response = await fetch(url + \"/parent/\", {\n        method: \"get\",\n        headers: {\n            Authorization: \"bearer \" + token\n        }\n    })\n    const json = await response.json()\n    setParents(json)\n  }\n\n  //have Parent data displayed on page\n  React.useEffect (() => {\n    getParents() \n }, [])\n\n  ////// handleCreate to create Parent ///////\n\n  const handleCreate = (parent) => {\n    fetch(url + \"/parent/\", { \n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify(parent)\n    })\n    .then(response => response.json())\n    .then(data => {\n        getParents()\n    })\n\n}\n\n//////handleUpdate to update a parent when form is clicked\n\nconst handleUpdate = (parent, id) => {\n// const parent = update.current.value;\nconsole.log(parent)\nfetch(url + \"/parent/\" + parent._id, {\n\n  method: \"put\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `bearer ${token}`\n  },\n  body: JSON.stringify(id),\n}).then((response) => response.json())\n.then((data) => {\n    // update.current.value=\"\";\n    getParents();\n    });\n};\n\n///// deleteParent function to delete a parent from db\n\nconst handleDelete = (id) => {\nfetch(url + \"/parent/\" + id, { \n    method: \"delete\",\n    headers: {\n        Authorization: `bearer ${token}`\n    },\n})\n.then(response => response.json())\n.then(data => {\n    getParents()\n})\n}\n\n//fetching students \nconst getStudents = async() => {\nconst response = await fetch(url + \"/student/\", {\n    method: \"get\",\n    headers: {\n        Authorization: \"bearer \" + token\n    }\n})\nconst json = await response.json()\nsetStudents(json)\n}\n//have student data displayed on page\nReact.useEffect (() => {\n    getStudents() \n}, [])\n\n//////////// create student //////////\nconst handleCreateStudent = (student) => {\n    fetch(url + \"/student/\", { \n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify(student)\n    })\n    .then(response => response.json())\n    .then(data => {\n        getStudents()\n    })\n  }\n\n//////handleUpdateStudent to update a student when form is clicked\n\nconst handleUpdateStudent = (student, id) => {\n    fetch(url + \"/student/\" + student._id, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `bearer ${token}`\n      },\n      body: JSON.stringify(id),\n    }).then((response) => response.json())\n    .then((data) => {\n        getStudents();\n        });\n    };\n\n///// deleteStudent function to delete a student from db\n\nconst handleDeleteStudent = (id) => {\n    fetch(url + \"/student/\" + id, { \n        method: \"delete\",\n        headers: {\n            Authorization: `bearer ${token}`\n        },\n    })\n    .then(response => response.json())\n    .then(data => {\n        getStudents()\n    })\n    }\n    \n\n////// feacting teachers /////\n\nconst getTeachers = async() => {\n    const response = await fetch(url + \"/teacher/\", {\n        method: \"get\",\n        headers: {\n            Authorization: \"bearer \" + token\n        }\n    })\n    const json = await response.json()\n    setTeachers(json)\n  }\n  //have teacher data displayed on page\n  React.useEffect (() => {\n     getTeachers() \n  }, [])\n\n\n/////// create Teacher /////////\nconst handleCreateTeacher = (teacher) => {\n      fetch(url + \"/teacher/\", { \n          method: \"post\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `bearer ${token}`\n          },\n          body: JSON.stringify(teacher)\n      })\n      .then(response => response.json())\n      .then(data => {\n          getTeachers()\n      })\n    }\n\n    //////handleUpdate to update a parent when form is clicked\n\nconst handleUpdateTeacher = (teacher, id) => {\n    // const parent = update.current.value;\n    console.log(teacher)\n    fetch(url + \"/teacher/\" + teacher._id, {\n    \n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `bearer ${token}`\n      },\n      body: JSON.stringify(id),\n    }).then((response) => response.json())\n    .then((data) => {\n        // update.current.value=\"\";\n        getTeachers();\n        });\n    };\n\n///// deleteTeacher function to delete a teacher from db\n\nconst handleDeleteTeacher = (id) => {\n    fetch(url + \"/teacher/\" + id, { \n        method: \"delete\",\n        headers: {\n            Authorization: `bearer ${token}`\n        },\n    })\n    .then(response => response.json())\n    .then(data => {\n        getTeachers()\n    })\n    }\n    \n\n  return (\n    <MDBContainer>\n      <div>\n          <h1>Admin Dashboard</h1>\n          \n          <main>\n              <div>\n              <Switch>\n                <Route \n                  exact \n                  path=\"/\"\n                  render={(rp)=>(\n                    <>\n                   \n                    <MDBCard>\n                    <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n                        Parents\n                        <Link to=\"/create\" params={{label:'created'}}>\n                        <button>Add Parent</button>\n                    </Link>\n                    </MDBCardHeader>\n                    <MDBCardBody>\n                    <MDBTable>\n                        <MDBTableHead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Name</th>\n                                <th>User Name</th>\n                                <th>Kids</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                parents ? parents.map((parent) => (\n                                <tr>\n                                <td>{parent._id}</td>\n                                <td >{parent.parentName}</td>\n                                <td>{parent.username}</td>\n                                <td>todo</td>\n                                <td><Link to={`/edit`} onClick={()=>setSelectedParent(parent)}>Edit</Link></td>\n                                <td><Link onClick={() => handleDelete(parent._id)}>Delete</Link></td>\n                                </tr>\n                            )) : null }\n                        </MDBTableBody>\n                        </MDBTable>\n                        </MDBCardBody>\n                        </MDBCard>\n                            <MDBCard>\n                                <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n                                   students\n                                    <Link to=\"/createStudent\">\n                                    <button>Add student</button>\n                                    </Link>  \n                                </MDBCardHeader>\n                     <MDBCardBody>\n                        <MDBTable>\n                        <MDBTableHead>\n                        <tr>\n                                <th>Student Id</th>\n                                <th>Student Name</th>\n                                <th>Student Picture</th>\n                                <th>Parent User Name</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                            </MDBTableHead>\n                            <MDBTableBody>\n                                {\n                                    students ? students.map((student) => (\n                                    <tr> \n                                    <td>{student._id}</td>\n                                    <td> {student.child_name}</td>\n                                    <td>{student.child_image}</td>\n                                    <td>{student.parent_user_name}</td>\n                                    <td><Link to={`/studentEdit`} onClick={()=>setSelectedStudent(student)}>Edit</Link></td>\n                                    <td><Link onClick={() => handleDeleteStudent(student._id)}>Delete</Link></td>\n                                    </tr>\n                                 )) : null \n                                }\n                         </MDBTableBody>\n                        </MDBTable>\n                        </MDBCardBody>\n                        </MDBCard>\n                        <MDBCard>\n                                <MDBCardHeader tag=\"h3\" className=\"text-center font-weight-bold text-uppercase py-4\">\n                                   Teachers\n                                    <Link to=\"/createTeacher\">\n                                    <button>Add teacher</button>\n                                    </Link>  \n                                </MDBCardHeader>\n                     <MDBCardBody>\n                        <MDBTable>\n                        <MDBTableHead>\n                            <tr>\n                                <th>Teacher Name</th>\n                                <th>username</th>\n                                <th>class list</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                        </MDBTableHead>\n                        <MDBTableBody>\n                            {\n                                teachers ? teachers.map((teacher) => (\n                                    <tr>\n                                        <td>{teacher.teacherName}</td>\n                                        <td>{teacher.username}</td>\n                                        <td>{teacher.students_ids.join(\",\")}</td>\n                                        <td><Link to={`/teacherEdit`} onClick={()=>setSelectedTeacher(teacher)}>Edit</Link></td>\n                                        <td><Link onClick={() => handleDeleteTeacher(teacher._id)}>Delete</Link></td>\n                                    </tr>\n                                )): null\n                            }\n\n                        </MDBTableBody>\n                        </MDBTable>\n                        </MDBCardBody>\n                        </MDBCard>\n                    </>\n                  )}/>\n                  <Route \n                  exact \n                  path=\"/create\"\n                  render={(rp)=>(\n                    <ParentForm\n                        {...rp}\n                        label=\"create\"\n                        parent={emptyParent}\n                        handleSubmit={handleCreate}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/edit\"\n                  render={(rp)=>(\n                    <ParentForm\n                        {...rp}\n                        label=\"edit\"\n                        parent={selectedParent}\n                        handleSubmit={handleUpdate}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/createStudent\"\n                  render={(rp)=>(\n                    <StudentForm\n                        {...rp}\n                        student={emptyStudent}\n                        parents={parents}\n                        handleSubmit={handleCreateStudent}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/studentEdit\"\n                  render={(rp)=>(\n                    <StudentForm\n                        {...rp}\n                        label=\"edit\"\n                        student={selectedStudent}\n                        parents={parents}\n                        handleSubmit={handleUpdateStudent}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/createTeacher\"\n                  render={(rp)=>(\n                    <TeacherForm\n                        {...rp}\n                        teacher={emptyTeacher}\n                        students={students}\n                        handleSubmit={handleCreateTeacher}\n                    /> \n                  )}/>\n                  <Route \n                  exact \n                  path=\"/teacherEdit\"\n                  render={(rp)=>(\n                    <TeacherForm\n                        {...rp}\n                        label=\"edit\"\n                        teacher={selectedTeacher}\n                        // student={selectedStudent}\n                        // students={students}\n                        handleSubmit={handleUpdateTeacher}\n                    /> \n                  )}/>\n              </Switch>\n              </div> \n          </main>\n\n      </div>\n    </MDBContainer>\n  );\n};\n\n  export default Dashboard;\n\n","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/parentForm.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/App.js",["55","56","57"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/reportWebVitals.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/login.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/index.js",["58"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/studentForm.js",["59"],"import React from \"react\";\nimport { GlobalCtx } from \"../../App\";\n\nconst StudentForm = (props) => {\n  //state for the form\n\n  // todo : extract .parents property, then use it to build a select element (each value is an option)\n  const [formData, setFormData] = React.useState(props.student);\n  const [parents] = React.useState(props.parents);\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent Form from Refreshing\n    props.handleSubmit(formData); // Submit to Parents desired function\n    props.history.push(\"/\"); //Push back to display page\n  };\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n  \n\n  return (\n      <>\n      <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"Child Name\" name=\"child_name\" value={formData.child_name} onChange={handleChange} ></input>\n          <input type=\"img\" placeholder=\"Child Image\" name=\"child_image\" value={formData.child_image} onChange={handleChange} ></input>\n          <select name=\"parent_user_name\" onChange={handleChange} >\n            {\n              parents.map((parent)=>{\n                return <option key={parent._id} value={parent._id}>{parent.parentName}</option>\n              })\n            }\n          </select>\n          <input type=\"submit\" value={props.label} />\n      </form>\n      </>\n  );\n};\n\nexport default StudentForm;","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/signup.js",["60","61"],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/pages/home.js",[],"/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/forms/teacherForm.js",["62"],"import React from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\n\nconst TeacherForm = (props) => {\n  //state for the form\n\n  // todo : extract .parents property, then use it to build a select element (each value is an option)\n  const [formData, setFormData] = React.useState(props.teacher);\n  const [students] = React.useState(props.students);\n  const [selected, setSelected] = React.useState([]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent Form from Refreshing\n    const selectedIds = selected.map((student)=>{\n      return student.value;\n    }).join(\",\");\n    formData.students_ids = selectedIds;\n    props.handleSubmit(formData); // Submit to Parents desired function\n    props.history.push(\"/\"); //Push back to display page\n  };\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const transformStudents = () =>{\n      const options = [];\n      students.map((student)=>{\n        options.push({\n            value: student._id,\n            label: student.child_name\n        })\n      });\n\n      return options;\n  }\n\n\n  return (\n      <>\n      <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"teacher Name\" name=\"teacherName\" value={formData.teacherName} onChange={handleChange} ></input> <br/>\n          Students:<br/>\n          <MultiSelect options={transformStudents()} value={selected} onChange={setSelected} labelledBy={\"Select\"}/>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={formData.username} onChange={handleChange} ></input>\n          <input type=\"password\" placeholder=\"password\" name=\"password\" value={formData.password} onChange={handleChange} ></input>\n          <input type=\"submit\" value={props.label} />\n      </form>\n      </>\n  );\n};\n\nexport default TeacherForm;","/Users/lea/Desktop/seir-flex-zen-work/projects/final_project/health_screen/client_frontend/health_screener/src/components/Header.js",["63","64","65","66","67","68","69"],{"ruleId":"70","severity":1,"message":"71","line":7,"column":22,"nodeType":"72","messageId":"73","endLine":7,"endColumn":28},{"ruleId":"70","severity":1,"message":"74","line":38,"column":19,"nodeType":"72","messageId":"73","endLine":38,"endColumn":28},{"ruleId":"75","severity":1,"message":"76","line":62,"column":5,"nodeType":"77","endLine":62,"endColumn":7,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":131,"column":4,"nodeType":"77","endLine":131,"endColumn":6,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"81","line":196,"column":6,"nodeType":"77","endLine":196,"endColumn":8,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"83","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":12},{"ruleId":"70","severity":1,"message":"84","line":14,"column":3,"nodeType":"72","messageId":"73","endLine":14,"endColumn":7},{"ruleId":"75","severity":1,"message":"85","line":40,"column":6,"nodeType":"77","endLine":40,"endColumn":8,"suggestions":"86"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":26,"nodeType":"72","messageId":"73","endLine":7,"endColumn":32},{"ruleId":"70","severity":1,"message":"87","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":19},{"ruleId":"70","severity":1,"message":"88","line":3,"column":50,"nodeType":"72","messageId":"73","endLine":3,"endColumn":56},{"ruleId":"70","severity":1,"message":"74","line":7,"column":20,"nodeType":"72","messageId":"73","endLine":7,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":28,"column":29,"nodeType":"91","messageId":"92","endLine":28,"endColumn":31},{"ruleId":"70","severity":1,"message":"93","line":4,"column":75,"nodeType":"72","messageId":"73","endLine":4,"endColumn":91},{"ruleId":"70","severity":1,"message":"94","line":4,"column":93,"nodeType":"72","messageId":"73","endLine":4,"endColumn":104},{"ruleId":"70","severity":1,"message":"95","line":4,"column":106,"nodeType":"72","messageId":"73","endLine":4,"endColumn":117},{"ruleId":"70","severity":1,"message":"96","line":5,"column":3,"nodeType":"72","messageId":"73","endLine":5,"endColumn":20},{"ruleId":"70","severity":1,"message":"97","line":5,"column":22,"nodeType":"72","messageId":"73","endLine":5,"endColumn":37},{"ruleId":"70","severity":1,"message":"98","line":5,"column":39,"nodeType":"72","messageId":"73","endLine":5,"endColumn":54},{"ruleId":"70","severity":1,"message":"99","line":5,"column":56,"nodeType":"72","messageId":"73","endLine":5,"endColumn":63},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'setGState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getParents'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook React.useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["101"],"React Hook React.useEffect has a missing dependency: 'getTeachers'. Either include it or remove the dependency array.",["102"],"'logo' is defined but never used.","'Link' is defined but never used.","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setGState(g => ...)' if you only need 'gState' in the 'setGState' call.",["103"],"'GlobalCtx' is defined but never used.","'MDBBtn' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'MDBNavbarToggler' is defined but never used.","'MDBCollapse' is defined but never used.","'MDBDropdown' is defined but never used.","'MDBDropdownToggle' is defined but never used.","'MDBDropdownMenu' is defined but never used.","'MDBDropdownItem' is defined but never used.","'MDBIcon' is defined but never used.",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [getParents]",{"range":"112","text":"113"},"Update the dependencies array to be: [getStudents]",{"range":"114","text":"115"},"Update the dependencies array to be: [getTeachers]",{"range":"116","text":"117"},"Update the dependencies array to be: [gState]",{"range":"118","text":"119"},[1756,1758],"[getParents]",[3226,3228],"[getStudents]",[4783,4785],"[getTeachers]",[802,804],"[gState]"]